# # SNAPSHOT VERSION

# version: "3.8"

# services:
#   postgres:
#     image: postgres:13
#     volumes:
#       - ./db-init:/docker-entrypoint-initdb.d
#       - postgres-data:/var/lib/postgresql/data
#     environment:
#       POSTGRES_DB: digimondb
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: mysecretpassword

#   frontend:
#     build:
#       context: ./frontend
#       dockerfile: Dockerfile
#     ports:
#       - "7001:5173"
#     depends_on:
#       - backend

#   backend:
#     build: ./server
#     ports:
#       - "8080:8080"
#     environment:
#       DATASOURCES_DEFAULT_URL: jdbc:postgresql://postgres:5432/digimondb
#       DATASOURCES_DEFAULT_USERNAME: postgres
#       DATASOURCES_DEFAULT_PASSWORD: mysecretpassword
#     depends_on:
#       - postgres

# volumes:
#   postgres-data:

# # BIND MOUNTED VERSION

version: "3.8"

services:
  postgres:
    image: postgres:13
    volumes:
      - ./db-init:/docker-entrypoint-initdb.d
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: digimondb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "7001:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules # This excludes node_modules from the bind mount
    depends_on:
      - backend
    command: /bin/sh -c "npm install && npm run dev"

  backend:
    build: ./server
    ports:
      - "8080:8080"
    volumes: # Added this section for backend bind mount
      - ./server:/path/in/container
    environment:
      DATASOURCES_DEFAULT_URL: jdbc:postgresql://postgres:5432/digimondb
      DATASOURCES_DEFAULT_USERNAME: postgres
      DATASOURCES_DEFAULT_PASSWORD: mysecretpassword
    depends_on:
      - postgres

volumes:
  postgres-data:
